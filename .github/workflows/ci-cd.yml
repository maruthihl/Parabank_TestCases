name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger the pipeline for pull requests targeting 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu as the environment for the CI

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the code from the repository

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Use Java 17, you can change this if needed

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install -DskipTests  # Build the project, skipping tests for faster build

      - name: Run Tests
        run: mvn test  # Optionally run the tests

      - name: Upload JAR to Artifactory (Optional)
        uses: actions/upload-artifact@v2
        with:
          name: parabank-automation-jar
          path: target/parabank-automation-1.0-SNAPSHOT.jar

  deploy:
    needs: build  # This job runs after the build job completes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Server (SSH example)
        run: |
          scp target/parabank-automation-1.0-SNAPSHOT.jar username@your-server:/path/to/deployment/folder/
          ssh username@your-server "java -jar /path/to/deployment/folder/parabank-automation-1.0-SNAPSHOT.jar"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
